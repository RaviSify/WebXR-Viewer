{"version":3,"file":"image-comparison-worker.js","sources":["../lib/third_party/pixelmatch/color-delta.js","../lib/test/fidelity/common.js","../lib/test/fidelity/image-comparison-worker.js"],"sourcesContent":["/* @license ISC\r\n * @see LICENSE\r\n */\r\n// NOTE(cdata): This is an adapted subset of the original pixelmatch library.\r\n// The top-level API of the original library has been omitted, as we only make\r\n// use of the lower-level features that aren't actually exported by the upstream\r\n// module.\r\n// calculate color difference according to the paper \"Measuring perceived color\r\n// difference using YIQ NTSC transmission color space in mobile applications\" by\r\n// Y. Kotsarenko and F. Ramos\r\nexport function colorDelta(img1, img2, k, m, yOnly = false) {\r\n    var a1 = img1[k + 3] / 255, a2 = img2[m + 3] / 255, r1 = blend(img1[k + 0], a1), g1 = blend(img1[k + 1], a1), b1 = blend(img1[k + 2], a1), r2 = blend(img2[m + 0], a2), g2 = blend(img2[m + 1], a2), b2 = blend(img2[m + 2], a2), y = rgb2y(r1, g1, b1) - rgb2y(r2, g2, b2);\r\n    if (yOnly)\r\n        return y; // brightness difference only\r\n    var i = rgb2i(r1, g1, b1) - rgb2i(r2, g2, b2), q = rgb2q(r1, g1, b1) - rgb2q(r2, g2, b2);\r\n    return 0.5053 * y * y + 0.299 * i * i + 0.1957 * q * q;\r\n}\r\nfunction rgb2y(r, g, b) {\r\n    return r * 0.29889531 + g * 0.58662247 + b * 0.11448223;\r\n}\r\nfunction rgb2i(r, g, b) {\r\n    return r * 0.59597799 - g * 0.27417610 - b * 0.32180189;\r\n}\r\nfunction rgb2q(r, g, b) {\r\n    return r * 0.21147017 - g * 0.52261711 + b * 0.31114694;\r\n}\r\n// blend semi-transparent color with white\r\nfunction blend(c, a) {\r\n    return 255 + (c - 255) * a;\r\n}\r\nexport function drawPixel(output, pos, r, g, b) {\r\n    output[pos + 0] = r;\r\n    output[pos + 1] = g;\r\n    output[pos + 2] = b;\r\n    output[pos + 3] = 255;\r\n}\r\n//# sourceMappingURL=color-delta.js.map","/* @license\r\n * Copyright 2018 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { colorDelta } from '../../third_party/pixelmatch/color-delta.js';\r\nexport const COMPONENTS_PER_PIXEL = 4;\r\n// 35215 is the maximum possible value for the YIQ difference metric\r\n// @see https://github.com/mapbox/pixelmatch/blob/master/index.js#L14\r\n// @see http://www.progmat.uaem.mx:8080/artVol2Num2/Articulo3Vol2Num2.pdf\r\nexport const MAX_COLOR_DISTANCE = 35215;\r\nexport class ImageComparator {\r\n    constructor(candidateImage, goldenImage, dimensions) {\r\n        this.candidateImage = candidateImage;\r\n        this.goldenImage = goldenImage;\r\n        this.dimensions = dimensions;\r\n        const { width, height } = dimensions;\r\n        this.imagePixels = width * height;\r\n    }\r\n    drawPixel(image, position, r, g, b, a = 255) {\r\n        image[position + 0] = r;\r\n        image[position + 1] = g;\r\n        image[position + 2] = b;\r\n        image[position + 3] = a;\r\n    }\r\n    analyze(threshold, options = {\r\n        generateVisuals: true\r\n    }) {\r\n        const { candidateImage, goldenImage } = this;\r\n        const { width, height } = this.dimensions;\r\n        const { generateVisuals } = options;\r\n        const blackWhiteImage = generateVisuals ?\r\n            new Uint8ClampedArray(this.imagePixels * COMPONENTS_PER_PIXEL) :\r\n            null;\r\n        const deltaImage = generateVisuals ?\r\n            new Uint8ClampedArray(this.imagePixels * COMPONENTS_PER_PIXEL) :\r\n            null;\r\n        const thresholdSquared = threshold * threshold;\r\n        let matched = 0;\r\n        let sum = 0;\r\n        let mismatchingSum = 0;\r\n        let maximumDeltaIntensity = 0;\r\n        if (candidateImage.length != goldenImage.length) {\r\n            throw new Error(`Image sizes do not match (candidate: ${candidateImage.length}, golden: ${goldenImage.length})`);\r\n        }\r\n        for (let y = 0; y < height; ++y) {\r\n            for (let x = 0; x < width; ++x) {\r\n                const index = y * width + x;\r\n                const position = index * COMPONENTS_PER_PIXEL;\r\n                const delta = colorDelta(candidateImage, goldenImage, position, position);\r\n                const exactlyMatched = (delta <= thresholdSquared ? 1 : 0) * 255;\r\n                if (exactlyMatched) {\r\n                    matched++;\r\n                }\r\n                else {\r\n                    mismatchingSum += delta;\r\n                }\r\n                const thresholdDelta = Math.max(0, delta - thresholdSquared);\r\n                sum += thresholdDelta;\r\n                if (generateVisuals) {\r\n                    const deltaIntensity = Math.round(255 * thresholdDelta / MAX_COLOR_DISTANCE);\r\n                    maximumDeltaIntensity =\r\n                        Math.max(deltaIntensity, maximumDeltaIntensity);\r\n                    this.drawPixel(blackWhiteImage, position, exactlyMatched, exactlyMatched, exactlyMatched);\r\n                    this.drawPixel(deltaImage, position, 255, 255 - deltaIntensity, 255 - deltaIntensity);\r\n                }\r\n            }\r\n        }\r\n        if (generateVisuals) {\r\n            for (let y = 0; y < height; ++y) {\r\n                for (let x = 0; x < width; ++x) {\r\n                    const index = y * width + x;\r\n                    const position = index * COMPONENTS_PER_PIXEL;\r\n                    const absoluteDeltaIntensity = 255 - deltaImage[position + 1];\r\n                    const relativeDeltaIntensity = Math.round(255 - 255 * (absoluteDeltaIntensity / maximumDeltaIntensity));\r\n                    this.drawPixel(deltaImage, position, 255, relativeDeltaIntensity, relativeDeltaIntensity);\r\n                }\r\n            }\r\n        }\r\n        const mismatchingPixels = this.imagePixels - matched;\r\n        const mismatchingAverageDistanceRatio = mismatchingPixels > 0 ?\r\n            mismatchingSum / (this.imagePixels - matched) / MAX_COLOR_DISTANCE :\r\n            0;\r\n        const averageDistanceRatio = sum / this.imagePixels / MAX_COLOR_DISTANCE;\r\n        return {\r\n            analysis: {\r\n                matchingRatio: matched / this.imagePixels,\r\n                averageDistanceRatio,\r\n                mismatchingAverageDistanceRatio,\r\n            },\r\n            imageBuffers: {\r\n                delta: deltaImage ? deltaImage.buffer : null,\r\n                blackWhite: blackWhiteImage ? blackWhiteImage.buffer :\r\n                    null\r\n            }\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=common.js.map","/* @license\r\n * Copyright 2018 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { ImageComparator } from './common.js';\r\nclass ImageComparisonWorker {\r\n    constructor() {\r\n        this.analyzer = null;\r\n        this.candidateCanvas = null;\r\n        this.candidateContext = null;\r\n        this.goldenCanvas = null;\r\n        this.goldenContext = null;\r\n        this.blackWhiteCanvas = null;\r\n        this.blackWhiteContext = null;\r\n        this.deltaCanvas = null;\r\n        this.deltaContext = null;\r\n        self.onmessage = (event) => this.onGlobalMessage(event);\r\n    }\r\n    onMessage(event, port) {\r\n        const data = event.data;\r\n        switch (data.type) {\r\n            case 'canvases-ready': {\r\n                const { candidateCanvas, goldenCanvas, blackWhiteCanvas, deltaCanvas } = data;\r\n                this.candidateCanvas = candidateCanvas;\r\n                this.candidateContext = candidateCanvas.getContext('2d');\r\n                this.goldenCanvas = goldenCanvas;\r\n                this.goldenContext = goldenCanvas.getContext('2d');\r\n                this.blackWhiteCanvas = blackWhiteCanvas;\r\n                this.blackWhiteContext = blackWhiteCanvas.getContext('2d');\r\n                this.deltaCanvas = deltaCanvas;\r\n                this.deltaContext = deltaCanvas.getContext('2d');\r\n                break;\r\n            }\r\n            case 'images-assigned': {\r\n                const { candidateImageBuffer, goldenImageBuffer, dimensions } = data;\r\n                if (this.candidateCanvas == null || this.goldenCanvas == null ||\r\n                    this.blackWhiteCanvas == null || this.deltaCanvas == null) {\r\n                    console.warn('Images assigned before canvases are available!');\r\n                }\r\n                this.candidateCanvas.width = this.goldenCanvas.width =\r\n                    this.blackWhiteCanvas.width = this.deltaCanvas.width =\r\n                        dimensions.width;\r\n                this.candidateCanvas.height = this.goldenCanvas.height =\r\n                    this.blackWhiteCanvas.height = this.deltaCanvas.height =\r\n                        dimensions.height;\r\n                const candidateArray = new Uint8ClampedArray(candidateImageBuffer);\r\n                const goldenArray = new Uint8ClampedArray(goldenImageBuffer);\r\n                const { width, height } = dimensions;\r\n                this.analyzer =\r\n                    new ImageComparator(candidateArray, goldenArray, dimensions);\r\n                this.candidateContext.putImageData(new ImageData(candidateArray, width, height), 0, 0);\r\n                this.goldenContext.putImageData(new ImageData(goldenArray, width, height), 0, 0);\r\n                break;\r\n            }\r\n            case 'threshold-changed': {\r\n                const { threshold } = data;\r\n                const { analyzer } = this;\r\n                if (analyzer == null) {\r\n                    console.warn(`Analyzer not created!`);\r\n                    return;\r\n                }\r\n                const { width, height } = this.analyzer.dimensions;\r\n                const result = analyzer.analyze(threshold, { generateVisuals: true });\r\n                this.blackWhiteContext.putImageData(new ImageData(new Uint8ClampedArray(result.imageBuffers.blackWhite), width, height), 0, 0);\r\n                this.deltaContext.putImageData(new ImageData(new Uint8ClampedArray(result.imageBuffers.delta), width, height), 0, 0);\r\n                port.postMessage({ type: 'analysis-completed', result });\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    onGlobalMessage(event) {\r\n        event.ports.forEach(port => port.onmessage = (event) => this.onMessage(event, port));\r\n    }\r\n}\r\nself.imageComparisonWorker = new ImageComparisonWorker();\r\n//# sourceMappingURL=image-comparison-worker.js.map"],"names":[],"mappings":"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"}